apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "refmd.fullname" . }}-api
  labels:
    {{- include "refmd.api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "refmd.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "refmd.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "refmd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: db-url-builder
          image: busybox:latest
          command:
            - sh
            - -c
            - |
              {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
              # Build DATABASE_URL dynamically
              DB_PASSWORD=$(cat /etc/db-secret/{{ include "refmd.postgresqlPasswordKey" . }})
              DB_URL="postgresql://{{ include "refmd.postgresqlUsername" . }}:${DB_PASSWORD}@{{ include "refmd.postgresqlHost" . }}:{{ include "refmd.postgresqlPort" . }}/{{ include "refmd.postgresqlDatabase" . }}"
              echo "$DB_URL" > /shared/database-url
              echo "Database URL configured"
              {{- else }}
              # Use static DATABASE_URL from secret
              echo "Using static DATABASE_URL from secret"
              {{- end }}
          volumeMounts:
            {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
            - name: db-secret
              mountPath: /etc/db-secret
              readOnly: true
            - name: shared-data
              mountPath: /shared
            {{- end }}
          {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
          env:
            - name: DB_HOST
              value: {{ include "refmd.postgresqlHost" . | quote }}
            - name: DB_PORT
              value: {{ include "refmd.postgresqlPort" . | quote }}
            - name: DB_USER
              value: {{ include "refmd.postgresqlUsername" . | quote }}
            - name: DB_NAME
              value: {{ include "refmd.postgresqlDatabase" . | quote }}
          {{- end }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.api.repository }}:{{ .Values.image.api.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.api.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.api.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "refmd.fullname" . }}
            {{- $databaseUrl := include "refmd.databaseUrl" . }}
            {{- if $databaseUrl }}
            - secretRef:
                name: {{ include "refmd.fullname" . }}
            {{- end }}
          {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
          command:
            - sh
            - -c
            - |
              if [ -f /shared/database-url ]; then
                export DATABASE_URL=$(cat /shared/database-url)
                echo "Using dynamic DATABASE_URL"
              else
                echo "No dynamic DATABASE_URL found, using static configuration"
              fi
              exec /usr/local/bin/refmd-api
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: {{ .Values.refmd.api.uploadDir }}
            {{- end }}
            {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
            - name: shared-data
              mountPath: /shared
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "refmd.fullname" . }}-storage
        {{- end }}
        {{- if or .Values.postgresql.enabled .Values.externalDatabase.existingSecret }}
        - name: shared-data
          emptyDir: {}
        - name: db-secret
          secret:
            secretName: {{ include "refmd.postgresqlSecretName" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}